//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public PlayAudioComponent playAudio { get { return (PlayAudioComponent)GetComponent(GameComponentsLookup.PlayAudio); } }
    public bool hasPlayAudio { get { return HasComponent(GameComponentsLookup.PlayAudio); } }

    public void AddPlayAudio(AudioType newValue) {
        var index = GameComponentsLookup.PlayAudio;
        var component = (PlayAudioComponent)CreateComponent(index, typeof(PlayAudioComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplacePlayAudio(AudioType newValue) {
        var index = GameComponentsLookup.PlayAudio;
        var component = (PlayAudioComponent)CreateComponent(index, typeof(PlayAudioComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemovePlayAudio() {
        RemoveComponent(GameComponentsLookup.PlayAudio);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPlayAudio;

    public static Entitas.IMatcher<GameEntity> PlayAudio {
        get {
            if (_matcherPlayAudio == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.PlayAudio);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPlayAudio = matcher;
            }

            return _matcherPlayAudio;
        }
    }
}
